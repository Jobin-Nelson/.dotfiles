#
# ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
# ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#    ██║   ██╔████╔██║██║   ██║ ╚███╔╝
#    ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗
#    ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#    ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝
#


# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                         Options                          ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛


# General
set-option -g mouse on
set-option -g focus-events on
set-option -g default-terminal "tmux-256color"
set-option -sg terminal-overrides ",*:RGB"
set-option -s extended-keys on
set-option -g renumber-windows on
set-option -g detach-on-destroy off
set-option -g set-clipboard on
set-option -g main-pane-height 70%
set-option -g main-pane-width 70%

# VI Compatiblity
set-option -sg escape-time 0
set-option -g mode-keys vi

# Status colors
%hidden BG="default"
%hidden FG="white"

# Status style
set-option -g status-position bottom
set-option -g status-justify absolute-centre
set-option -g status-left-length 50
set-option -g status-right-length 100
set-option -g status-style bg=${BG},fg=${FG}
set-option -g status-right-style bg=${BG},fg=${FG}
set-option -g status-left-style bg=${BG},fg=${FG}
set-option -g message-style bg=${BG},fg=${FG}
set-window-option -g window-status-style bg=${BG},fg=${FG}
set-window-option -g window-status-current-style bg=${BG},fg=green,bright

# Status components
%hidden comp_session=" #S"
%hidden current_song="~/.config/tmux/current_song.sh"
%hidden comp_music="󰝚 #(${current_song})"
%hidden comp_cond_music="#{?#{==:#(${current_song}),},,${comp_music}}"
%hidden comp_host=" #h"
%hidden comp_date=" %F %a"
%hidden comp_time=" %H:%M"
%hidden window_status="\
#{?window_zoomed_flag, ,}\
#{?window_activity_flag,󰀨 ,}\
#{?window_silence_flag,󱒼 ,}\
#{?window_last_flag, ,}\
#{?window_marked_flag, ,}\
#{?window_active, ,}\
#{?window_raw_flags,, }\
#I:#W"

# Status format
set-option -g status-left "${comp_session}  ${comp_cond_music} "
set-option -g status-right "${comp_host}  ${comp_date}  ${comp_time}"
set-window-option -g window-status-current-format "${window_status} "
set-window-option -g window-status-format "${window_status} "

# Required for image.nvim plugin
set-option -gq allow-passthrough on


# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                      Key Bindings                        ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛


# General
bind-key -N 'Reload tmux config' r source-file ~/.config/tmux/tmux.conf \; display-message "Config Reloaded!"
bind-key -N 'Select last window' - last-window
bind-key -N 'Move window right' -r N swap-window -t +1 \; next-window
bind-key -N 'Move window left' -r P swap-window -t -1 \; previous-window
bind-key -N 'Toggle status' M-s set-option status

# Copy
if-shell "[[ $XDG_SESSION_TYPE == 'x11' ]]" {
  bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "xclip -selection clipboard -i"
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -selection clipboard -i"
}

if-shell "[[ $XDG_SESSION_TYPE == 'wayland' ]]" {
  bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "wl-copy"
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "wl-copy"
}

# VI Navigation
bind-key -N 'Select left pane' h select-pane -L
bind-key -N 'Select below pane' j select-pane -D
bind-key -N 'Select above pane' k select-pane -U
bind-key -N 'Select right pane' l select-pane -R

# Pane Navigation
bind-key -N 'Select pane 0' M-q select-pane -t 0
bind-key -N 'Select pane 1' M-w select-pane -t 1
bind-key -N 'Select pane 2' M-e select-pane -t 2
bind-key -N 'Select pane 3' M-r select-pane -t 3
bind-key -N 'Select pane 4' M-t select-pane -t 4
bind-key -N 'Select pane 5' M-y select-pane -t 5

# Same directory for new windows
bind-key -N 'Split window horizontally' % split-window -h -c '#{pane_current_path}'
bind-key -N 'Split window vertically' \" split-window -v -c '#{pane_current_path}'
bind-key -N 'Create a new window' c new-window -c '#{pane_current_path}'

# FZF Keybinds
bind-key -N 'Create Session' S run-shell -b "~/.local/bin/tmuxify.sh --session &>/dev/null || true"
bind-key -N 'Attach Worktree' C-w run-shell -b "~/.local/bin/tmuxify.sh --worktree &>/dev/null || true"
bind-key -N 'Setup IDE' i run-shell "~/.local/bin/tmuxify.sh --ide"
bind-key -N 'Switch Session' C-s display-popup -BE -w 60% \
  "tmux list-sessions -F '#{session_name} #{?session_attached,󱘖 ,}' \
  | fzf --style=full --prompt='Select session: ' --no-multi --height=100% --ansi \
  | awk '{ print $1 }' \
  | xargs -r tmux switch-client -t "
bind-key -N 'RMPC Music Client' C-g display-popup -E -w 80% -h 70% -T "#[align=centre] RMPC " "rmpc"


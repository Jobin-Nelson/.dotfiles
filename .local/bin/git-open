#!/usr/bin/env python3
import platform
import shlex
import subprocess
import sys
import webbrowser
from pathlib import Path

class GitRepositoryNotFound(Exception): ...
class ChromeExecutableNotFound(Exception): ...

def main() -> int:
    try:
        url = get_url()
    except GitRepositoryNotFound:
        return 1

    try:
        open_url(url)
    except ChromeExecutableNotFound:
        return 2

    return 0

def open_url(url: str):
    if platform.release().endswith('microsoft-standard-WSL2'):
        chrome_executable = Path('/mnt/c/Program Files/Google/Chrome/Application/chrome.exe')
        if not chrome_executable.exists():
            print(f'{chrome_executable} not found', file=sys.stderr)
            raise ChromeExecutableNotFound
        subprocess.run([str(chrome_executable), url])
        return
    webbrowser.open(url)

def get_url() -> str:
    cmd = shlex.split('git github-url')
    try:
        res = subprocess.run(cmd, encoding='UTF-8', capture_output=True, text=True, check=True)
    except subprocess.CalledProcessError:
        print(f'{Path.cwd()} is not a git repository', file=sys.stderr)
        raise GitRepositoryNotFound
    return res.stdout.strip()

if __name__ == "__main__":
    raise SystemExit(main())
